// backend/server.js
const express = require('express');
const mysql = require('mysql2/promise');
const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');
const cors = require('cors');
const multer = require('multer');
const path = require('path');
require('dotenv').config();

const app = express();

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Serve static files (images)
app.use('/uploads', express.static('uploads'));

// Database connection
const db = mysql.createConnection({
    host: process.env.DB_HOST || 'localhost',
    user: process.env.DB_USER || 'root',
    password: process.env.DB_PASSWORD || '',
    database: process.env.DB_NAME || 'ishycosmetics'
});

// Test database connection
db.execute('SELECT 1')
    .then(() => {
        console.log('✅ Connected to MySQL database: ishycosmetics');
    })
    .catch(err => {
        console.error('❌ Database connection failed:', err.message);
    });

// Make db available to routes
app.use((req, res, next) => {
    req.db = db;
    next();
});

// Import routes
const productsRouter = require('./routes/products');
const authRouter = require('./routes/auth');

// Use routes
app.use('/api/products', productsRouter);
app.use('/api/auth', authRouter);

// Basic test route
app.get('/api/test', (req, res) => {
    res.json({ 
        message: 'IshyCosmetics API is working!', 
        timestamp: new Date().toISOString(),
        database: 'Connected to MySQL'
    });
});

// Root route
app.get('/', (req, res) => {
    res.json({
        message: 'Welcome to IshyCosmetics API',
        version: '1.0.0',
        endpoints: {
            products: '/api/products',
            auth: '/api/auth',
            test: '/api/test'
        }
    });
});

// Error handling middleware
app.use((err, req, res, next) => {
    console.error(err.stack);
    res.status(500).json({ error: 'Something went wrong!' });
});

// 404 handler
app.use('*', (req, res) => {
    res.status(404).json({ error: 'Route not found' });
});

const PORT = process.env.PORT || 5000;

app.listen(PORT, () => {
    console.log(`🚀 Server running on port ${PORT}`);
    console.log(`📍 API URL: http://localhost:${PORT}`);
    console.log(`🧪 Test endpoint: http://localhost:${PORT}/api/test`);
});

module.exports = app;